:ruby
  # :title => "A widget framework for Rails"

:javascript
  $(document).ready(function() {

  $("#header img").qtip({
    content: 'Help us promoting!\nVote for an <a href="http://feedback.railscasts.com/forums/77-episode-suggestions/suggestions/624545-apotomo">Apotomo Railscast!</a> <a href="#" id="close_callout">Close</a>',
    position: {
      corner: {
        tooltip:  "topLeft",
        target:   "bottomMiddle"
      }
    },
    show: {
      when: false,
      ready: true
    },
    hide: false,
    style: {
      border: {                      width: 1,                      radius: 10                   },                   
      padding:    10,
      top: 45,
      textAlign:  'center',
      tip:        true,
      name:       'dark'
    }
  });   
  
  $("#close_callout").click( function() {
    $("#header img").qtip("hide");
  });
         
  });

:textile
  h1. Widgets for Rails


:textile
  #{img "dragndrop-200.png", :class => "right"}
  
  Forget about your cluttered RJS code. Throw away the messed up partial collection that gets out of control. *Make your controllers slim, again.* And dump your AJAX wire code and its countless routes! 
  
  #{img "portlets-200.png", :class => "right"}
    
  *Apotomo is a true MVC widget framework for Rails.* Widgets are based on "Cells":http://cells.rubyforge.org and provide reuseable view components. Having bubbling events, they know when and how to update themselves via AJAX!
  
  
  Working with Apotomo widgets almost *feels like developing GUI components* - in a Rails environment.

.feature
  %h3 Getting started
  %ul
    %li Check #{page_link "our tutorial", "introduction-1.1"} stepping through Apotomo's features.
    %li #{page_link "Get help", :help} within minutes.
  
.feature
  %h3 Make better software
  %ul
    %li Apotomo improves your software architecture.
    %li Helps writing bullet-proof #{page_link "sustainable widget tests", :testing}.
    %li No merges! Teams can work on separate components.

.feature.last
  %h3 More features
  %ul
    %li Have #{page_link "bubbling events", :bubbling} from your browser in Ruby.
    %li Javascript agnostic. Use it with jQuery, Prototype, RightJS or YUI.
    %li Make widgets #{page_link "stateful", "stateful"} where it helps. 
